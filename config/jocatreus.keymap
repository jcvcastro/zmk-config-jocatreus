/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define FNC 3

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &kp Q             &kp W            &kp E      &kp R               &kp T            &kp Y      &kp U      &kp I      &kp O      &lt 4 P                &lt 3 ENTER
  &kp A             &kp S            &kp D      &kp F               &kp G            &kp H      &kp J      &kp K      &kp L      &kp SEMI               &mt LEFT_GUI TAB
  &mt LEFT_SHIFT Z  &mt RIGHT_ALT X  &kp C      &kp V               &kp B            &kp N      &kp M      &kp COMMA  &kp DOT    &mt RIGHT_SHIFT SLASH  &lt 1 SPACE
  &mt LCTRL ESC     &kp CAPS         &kp SPACE  &mt LEFT_ALT SPACE  &lt 5 BACKSPACE  &lt 2 TAB  &kp SPACE  &kp MINUS  &kp EQUAL  &mt RCTRL BACKSLASH    &lt 4 NON_US_BACKSLASH
            >;
        };

        lower_layer {
            bindings = <
  &kp LS(EXCL)    &kp LS(AT)    &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)  &kp PRCNT       &kp GRAVE  &kp CARET        &kp SQT    &kp BACKSPACE  &none
  &kp LS(LBRC)    &kp LS(RBRC)  &kp LS(LPAR)   &kp LS(RPAR)  &kp LS(AMPS)   &kp LEFT_ARROW  &kp DOWN   &kp UP_ARROW     &kp RIGHT  &kp TILDE      &none
  &kp LEFT_SHIFT  &kp DEL       &kp LBKT       &kp RBKT      &kp LS(STAR)   &kp HOME        &kp PG_DN  &kp PG_UP        &kp END    &kp BACKSLASH  &none
  &lt 2 ESC       &kp C_VOL_UP  &trans         &trans        &trans         &trans          &trans     &kp PRINTSCREEN  &trans     &trans         &none
            >;
        };

        raise_layer {
            bindings = <
  &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)       &kp LG(N5)  &kp FSLH   &kp N7  &kp N8     &kp N9   &kp BSPC   &kp C_VOL_UP
  &kp LEFT_BRACE    &kp RIGHT_BRACE   &kp LSHFT         &kp RIGHT_PARENTHESIS  &kp COLON   &kp STAR   &kp N4  &kp N5     &kp N6   &kp MINUS  &trans
  &none             &none             &kp LBKT          &kp RBKT               &kp SEMI    &kp EQUAL  &kp N1  &kp N2     &kp N3   &kp PLUS   &kp C_VOL_DN
  &none             &none             &none             &none                  &none       &none      &kp N0  &kp COMMA  &kp DOT  &kp ENTER  &trans
            >;
        };

        function_layer {
            bindings = <
  &kp F1     &kp F2             &kp F3       &kp F4        &kp F5        &kp F6        &kp F7        &kp F8                &kp F9                &kp F10  &none
  &trans     &trans             &trans       &trans        &trans        &trans        &trans        &trans                &kp F11               &kp F12  &none
  &soft_off  &ext_power EP_OFF  &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4          &trans                &trans   &trans
  &trans     &ext_power EP_ON   &bootloader  &out OUT_BLE  &out OUT_USB  &out OUT_TOG  &trans        &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans   &trans
            >;
        };

        numerosEsq {
            bindings = <
  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &none  &none  &none  &none  &none  &none
  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &none  &none  &none  &none  &none  &kp LEFT_GUI
  &none   &none   &none   &none   &none   &none  &none  &none  &none  &none  &none
  &none   &none   &none   &none   &none   &none  &none  &none  &none  &none  &none
            >;
        };

        Invertido {
            bindings = <
  &kp P     &kp O    &kp I      &kp U   &kp Y   &trans  &trans  &trans  &trans  &trans  &trans
  &kp SEMI  &kp L    &kp K      &kp J   &kp H   &trans  &trans  &trans  &trans  &trans  &trans
  &kp FSLH  &kp DOT  &kp COMMA  &kp M   &kp N   &trans  &trans  &trans  &trans  &trans  &trans
  &mo 4     &trans   &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
